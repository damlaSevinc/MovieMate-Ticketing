name: Backend CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.9-eclipse-temurin-17
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Debug Secrets (Check if they exist)
        run: |
          if [ -z "${{ secrets.MYSQL_USER }}" ]; then echo "❌ MYSQL_USER is missing!"; exit 1; fi
          if [ -z "${{ secrets.MYSQL_PASSWORD }}" ]; then echo "❌ MYSQL_PASSWORD is missing!"; exit 1; fi
          if [ -z "${{ secrets.MYSQL_DATABASE }}" ]; then echo "❌ MYSQL_DATABASE is missing!"; exit 1; fi
        shell: bash

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install MySQL Client
        run: apt-get update && apt-get install -y mysql-client

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --user=${{ secrets.MYSQL_USER }} --password=${{ secrets.MYSQL_PASSWORD }} --silent; then
              echo "✅ MySQL is up!"
              exit 0
            fi
              echo -n "."
              sleep 2
          done
          echo "❌ MySQL did not start in time."
          exit 1

      - name: Print MySQL Logs if Failure
        if: failure()
        run: cat /var/log/mysql/error.log || echo "No MySQL logs found"

      - name: Test with Maven
        run: mvn test
        working-directory: ./backend

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build with Maven
        run: mvn clean package
        working-directory: ./backend

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ./backend/target/*.jar